<?xml version="1.0" encoding="utf-8"?>
<Page x:Class="Rememory.Views.ClipboardRootPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:Rememory.Views"
      xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
      xmlns:models="using:Rememory.Models"
      xmlns:vm="using:Rememory.ViewModels"
      xmlns:tk="using:CommunityToolkit.WinUI"
      xmlns:tkconverters="using:CommunityToolkit.WinUI.Converters"
      xmlns:tkcontrols="using:CommunityToolkit.WinUI.Controls"
      xmlns:converters="using:Rememory.Converters"
      xmlns:controls="using:Rememory.Views.Controls"
      xmlns:behavior="using:Rememory.Views.Controls.Behavior"
      xmlns:selector="using:Rememory.Views.Controls.Selector"
      xmlns:triggers="using:CommunityToolkit.WinUI"
      x:Name="RootPage"
      DataContext="{x:Bind ViewModel}"
      SizeChanged="ClipboardRootPage_SizeChanged"
      KeyDown="RootPage_KeyDown">
    <Page.Resources>
        <tkconverters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <tkconverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <tkconverters:BoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter"
                                                TrueValue="Collapsed"
                                                FalseValue="Visible" />
        <tkconverters:EmptyObjectToObjectConverter x:Key="EmptyObjectToBoolConverter"
                                                   NotEmptyValue="True"
                                                   EmptyValue="False" />
        <converters:ClipToControlConverter x:Key="ClipToControlConverter"
                                           SearchString="{x:Bind ViewModel.SearchString, Mode=OneWay}" />
        <converters:DateTimeToHumanReadableConverter x:Key="DateTimeToHumanReadableConverter" />
        <converters:DataFooterInfoConverter x:Key="DataFooterInfoConverter" />

        <selector:NavigationTabTemplateSelector x:Key="NavigationTabTemplateSelector"
                                                TabItemTemplate="{StaticResource TabItemTemplate}"
                                                TagTabItemTemplate="{StaticResource TagTabItemTemplate}" />

        <DataTemplate x:Key="TabItemTemplate"
                      x:DataType="models:TabItemModel"
                      x:DefaultBindMode="OneWay">
            <FontIcon Glyph="{x:Bind Glyph}"
                      FontSize="16"
                      ToolTipService.ToolTip="{x:Bind Title}" />
        </DataTemplate>

        <DataTemplate x:Key="TagTabItemTemplate"
                      x:DataType="models:TabItemModel"
                      x:DefaultBindMode="OneWay">
            <Grid>
                <FontIcon Glyph="{x:Bind Glyph}"
                          FontSize="16"
                          Foreground="{x:Bind Tag.ColorBrush}"
                          ToolTipService.ToolTip="{x:Bind Tag.Name}" />

                <InfoBadge HorizontalAlignment="Right"
                           VerticalAlignment="Top"
                           Value="{x:Bind Tag.ClipsCount}"
                           Style="{StaticResource InformationalValueInfoBadgeStyle}"
                           Visibility="Visible" />
            </Grid>
        </DataTemplate>

        <Style x:Key="DataPreviewFlyoutPresenterStyle"
               BasedOn="{StaticResource DefaultFlyoutPresenterStyle}"
               TargetType="FlyoutPresenter">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="{ThemeResource FlyoutBorderThemeBrush}" />
            <Setter Property="BorderThickness"
                    Value="{ThemeResource FlyoutBorderThemeThickness}" />
            <Setter Property="Padding"
                    Value="{StaticResource FlyoutContentPadding}" />
            <Setter Property="MinWidth"
                    Value="{ThemeResource FlyoutThemeMinWidth}" />
            <Setter Property="MaxWidth"
                    Value="{ThemeResource FlyoutThemeMaxWidth}" />
            <Setter Property="MinHeight"
                    Value="{ThemeResource FlyoutThemeMinHeight}" />
            <Setter Property="MaxHeight"
                    Value="{ThemeResource FlyoutThemeMaxHeight}" />
            <Setter Property="CornerRadius"
                    Value="{ThemeResource OverlayCornerRadius}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="FlyoutPresenter">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BackgroundSizing="InnerBorderEdge">
                            <ScrollViewer x:Name="ScrollViewer"
                                          behavior:ScrollViewerBehavior.AutoScrollToStartOnShow="True"
                                          ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                          HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          AutomationProperties.AccessibilityView="Raw">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Flyout x:Key="PreviewTextFlyout"
                ShowMode="Transient"
                ShouldConstrainToRootBounds="False"
                Placement="LeftEdgeAlignedTop"
                Closed="PreviewFlyout_Closed">
            <Flyout.SystemBackdrop>
                <DesktopAcrylicBackdrop />
            </Flyout.SystemBackdrop>
            <TextBlock FontSize="{StaticResource BodyTextBlockFontSize}"
                       TextWrapping="Wrap"
                       IsTextSelectionEnabled="True" />
        </Flyout>

        <Flyout x:Key="PreviewRtfFlyout"
                ShowMode="Transient"
                ShouldConstrainToRootBounds="False"
                Placement="LeftEdgeAlignedTop"
                Closed="PreviewFlyout_Closed">
            <Flyout.SystemBackdrop>
                <DesktopAcrylicBackdrop />
            </Flyout.SystemBackdrop>
            <RichEditBox FontSize="{StaticResource BodyTextBlockFontSize}"
                         BorderThickness="0"
                         TextWrapping="Wrap">
                <RichEditBox.Resources>
                    <SolidColorBrush x:Key="TextControlBackground"
                                     Color="White" />
                    <SolidColorBrush x:Key="TextControlBackgroundDisabled"
                                     Color="White" />
                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver"
                                     Color="White" />
                    <SolidColorBrush x:Key="TextControlBackgroundFocused"
                                     Color="White" />
                </RichEditBox.Resources>
            </RichEditBox>
        </Flyout>

        <Flyout x:Key="PreviewImageFlyout"
                ShowMode="Transient"
                ShouldConstrainToRootBounds="False"
                Placement="LeftEdgeAlignedTop"
                Closed="PreviewFlyout_Closed">
            <Flyout.SystemBackdrop>
                <DesktopAcrylicBackdrop />
            </Flyout.SystemBackdrop>
            <Image behavior:ImageAutoResizeBehavior.AutoResize="True" />
        </Flyout>

        <MenuFlyout x:Key="TitleBarContextMenuFlyout">
            <MenuFlyoutItem x:Uid="TitleMenuButton_PinWindow"
                            AccessKey="T"
                            Command="{x:Bind ViewModel.ToggleWindowPinnedCommand}"
                            IsEnabled="{x:Bind ViewModel.IsWindowPinned, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xE718;}">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="T"
                                         Modifiers="Control"/>
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="TitleMenuButton_UnpinWindow"
                            AccessKey="U"
                            Command="{x:Bind ViewModel.ToggleWindowPinnedCommand}"
                            IsEnabled="{x:Bind ViewModel.IsWindowPinned, Mode=OneWay}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xE77A;}">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="T"
                                         Modifiers="Control" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="TitleMenuButton_PauseMonitoring"
                            AccessKey="P"
                            Command="{x:Bind ViewModel.ToggleClipboardMonitoringEnabledCommand}"
                            IsEnabled="{x:Bind ViewModel.IsClipboardMonitoringEnabled, Mode=OneWay}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xF0E3;}">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="M"
                                         Modifiers="Control" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Uid="TitleMenuButton_ResumeMonitoring"
                            AccessKey="R"
                            Command="{x:Bind ViewModel.ToggleClipboardMonitoringEnabledCommand}"
                            IsEnabled="{x:Bind ViewModel.IsClipboardMonitoringEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xF0E3;}">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="M"
                                         Modifiers="Control" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem x:Uid="TitleMenuButton_Settings"
                            AccessKey="S"
                            Command="{x:Bind ViewModel.OpenSettingsWindowCommand}"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xE713;}" />
            <MenuFlyoutItem x:Uid="TitleMenuButton_Quit"
                            AccessKey="Q"
                            Command="{x:Bind ViewModel.QuitAppCommand}"
                            Icon="{tk:FontIcon FontSize=16, Glyph=&#xEA39;}" />
        </MenuFlyout>

        <Flyout x:Key="FilterButtonFlyout"
                ShouldConstrainToRootBounds="False">
            <Flyout.FlyoutPresenterStyle>
                <Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}"
                       TargetType="FlyoutPresenter">
                    <Setter Property="MaxHeight"
                            Value="500" />
                </Style>
            </Flyout.FlyoutPresenterStyle>

            <TreeView x:Name="FilterTreeView"
                      SelectionMode="Multiple"
                      CanDragItems="False"
                      CanReorderItems="False"
                      ItemsSource="{x:Bind ViewModel.AppTreeViewNodes, Mode=OneWay}"
                      Loaded="FilterTreeView_Loaded"
                      SelectionChanged="FilterTreeView_SelectionChanged">
                <TreeView.ItemTemplate>
                    <DataTemplate x:DataType="models:AppTreeViewNode">
                        <TreeViewItem CanDrag="False"
                                      ItemsSource="{x:Bind Children, Mode=OneWay}"
                                      IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}"
                                      ToolTipService.ToolTip="{x:Bind OwnerPath, Mode=OneWay}">
                            <Grid Margin="-28 0 8 0"
                                  ColumnSpacing="8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Image Width="20"
                                       Height="20"
                                       Source="{x:Bind Image, Mode=OneWay}" />
                                <TextBlock Grid.Column="1"
                                           MaxWidth="200"
                                           TextTrimming="CharacterEllipsis"
                                           Text="{x:Bind Title, Mode=OneWay}" />
                            </Grid>
                        </TreeViewItem>
                    </DataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Flyout>

        <MenuFlyout x:Key="NoneSelectionClipsContextMenu">
            <MenuFlyoutItem x:Uid="ContextMenu_AddToFavorite"
                            CommandParameter="{Binding}"
                            Command="{x:Bind ViewModel.ToggleClipFavoriteCommand}"
                            IsEnabled="{Binding IsFavorite, Converter={StaticResource BoolNegationConverter}}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE734;}" />
            <MenuFlyoutItem x:Uid="ContextMenu_RemoveFromFavorite"
                            CommandParameter="{Binding}"
                            Command="{x:Bind ViewModel.ToggleClipFavoriteCommand}"
                            IsEnabled="{Binding IsFavorite}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE8D9;}" />
            <MenuFlyoutItem x:Uid="ContextMenu_OpenInBrowser"
                            CommandParameter="{Binding}"
                            Command="{x:Bind ViewModel.OpenInBrowserCommand}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xF6FA;}" />
            <MenuFlyoutItem x:Uid="ContextMenu_OpenInFlyout"
                            KeyboardAcceleratorTextOverride="Space"
                            Click="OpenInFlyoutItem_Click"
                            Icon="{tk:FontIcon Glyph=&#xE8A7;}" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem x:Uid="ContextMenu_Paste"
                            KeyboardAcceleratorTextOverride="Enter"
                            CommandParameter="{Binding}"
                            Command="{x:Bind ViewModel.PasteClipCommand}"
                            Icon="{tk:FontIcon Glyph=&#xE77F;}" />
            <MenuFlyoutSubItem x:Uid="ContextMenu_PasteAs"
                               Icon="{tk:FontIcon Glyph=&#xE8D2;}"
                               IsEnabled="{Binding IsEnabled, ElementName=PasteAsPlainTextMenuFlyoutItem}"
                               Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}">
                <MenuFlyoutItem x:Name="PasteAsPlainTextMenuFlyoutItem"
                                x:Uid="ContextMenu_PasteAsPlainText"
                                KeyboardAcceleratorTextOverride="Shift+Enter"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipAsPlainTextCommand}" />
                <MenuFlyoutSeparator />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsUpperCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithUpperCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsLowerCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithLowerCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsCapitalizeCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithCapitalizeCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsSentenceCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithSentenceCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsInvertCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithInvertCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsTrimWhitespace"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithTrimWhitespaceCommand}" />
                <MenuFlyoutSeparator Visibility="{x:Bind ViewModel.SettingsContext.IsDeveloperStringCaseConversionsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsCamelCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithCamelCaseCommand}"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsPascalCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithPascalCaseCommand}"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsSnakeCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithSnakeCaseCommand}"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsKebabCase"
                                CommandParameter="{Binding}"
                                Command="{x:Bind ViewModel.PasteClipWithKebabCaseCommand}"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}" />
            </MenuFlyoutSubItem>
            <MenuFlyoutItem x:Uid="ContextMenu_Copy"
                            KeyboardAcceleratorTextOverride="Ctrl+C"
                            CommandParameter="{Binding}"
                            Command="{x:Bind ViewModel.CopyClipCommand}"
                            Icon="{tk:FontIcon Glyph=&#xE8C8;}" />
            <MenuFlyoutItem x:Uid="ContextMenu_Edit"
                            KeyboardAcceleratorTextOverride="Ctrl+U"
                            CommandParameter="{Binding}"
                            Command="{x:Bind ViewModel.EditClipCommand}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE70F;}" />
            <MenuFlyoutItem x:Uid="ContextMenu_Delete"
                            CommandParameter="{Binding}"
                            Command="{x:Bind ViewModel.DeleteClipCommand}"
                            Icon="{tk:FontIcon Glyph=&#xE74D;}" />
            <MenuFlyoutSeparator />
            <MenuFlyoutSubItem x:Uid="ContextMenu_Tags"
                               Icon="{tk:FontIcon Glyph=&#xE8EC;}"
                               Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                               Loaded="MenuFlyoutTags_Loaded" />
            <MenuFlyoutItem x:Uid="ContextMenu_Filter"
                            CommandParameter="{Binding Owner}"
                            Command="{x:Bind ViewModel.AddOwnerToFiltersCommand}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE71C;}" />
        </MenuFlyout>

        <MenuFlyout x:Key="MultipleSelectionClipsContextMenu">
            <MenuFlyoutItem x:Uid="ContextMenu_AddToFavorite"
                            CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                            Command="{x:Bind ViewModel.AddClipsToFavoritesCommand}"
                            IsEnabled="{Binding IsFavorite, Converter={StaticResource BoolNegationConverter}}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE734;}" />
            <MenuFlyoutItem x:Uid="ContextMenu_RemoveFromFavorite"
                            CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                            Command="{x:Bind ViewModel.RemoveClipsFromFavoritesCommand}"
                            IsEnabled="{Binding IsFavorite}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE8D9;}" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem x:Name="PasteClipsMenuFlyoutItem"
                            x:Uid="ContextMenu_Paste"
                            CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                            Command="{x:Bind ViewModel.PasteClipsCommand}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE77F;}" />
            <MenuFlyoutSubItem x:Uid="ContextMenu_PasteAs"
                               Icon="{tk:FontIcon Glyph=&#xE8D2;}"
                               IsEnabled="{Binding IsEnabled, ElementName=PasteClipsMenuFlyoutItem}"
                               Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}">
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsUpperCase"
                                CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                                Command="{x:Bind ViewModel.PasteClipsWithUpperCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsLowerCase"
                                CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                                Command="{x:Bind ViewModel.PasteClipsWithLowerCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsCapitalizeCase"
                                CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                                Command="{x:Bind ViewModel.PasteClipsWithCapitalizeCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsSentenceCase"
                                CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                                Command="{x:Bind ViewModel.PasteClipsWithSentenceCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsInvertCase"
                                CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                                Command="{x:Bind ViewModel.PasteClipsWithInvertCaseCommand}" />
                <MenuFlyoutItem x:Uid="ContextMenu_PasteAsTrimWhitespace"
                                CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                                Command="{x:Bind ViewModel.PasteClipsWithTrimWhitespaceCommand}" />
            </MenuFlyoutSubItem>
            <MenuFlyoutItem x:Uid="ContextMenu_Copy"
                            KeyboardAcceleratorTextOverride="Ctrl+C"
                            CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                            Command="{x:Bind ViewModel.CopyClipsCommand}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE8C8;}" />
            <MenuFlyoutItem x:Uid="ContextMenu_Delete"
                            CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                            Command="{x:Bind ViewModel.DeleteClipsCommand}"
                            Icon="{tk:FontIcon Glyph=&#xE74D;}" />
            <MenuFlyoutSeparator Visibility="{Binding Visibility, ElementName=FilterClipsMenuFlyoutItem}" />
            <MenuFlyoutItem x:Name="FilterClipsMenuFlyoutItem"
                            x:Uid="ContextMenu_Filter"
                            CommandParameter="{x:Bind OrderedSelectedClips, Mode=OneWay}"
                            Command="{x:Bind ViewModel.AddOwnersToFiltersCommand}"
                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Icon="{tk:FontIcon Glyph=&#xE71C;}" />
        </MenuFlyout>
    </Page.Resources>

    <!-- Using BorderBrush to display border on Windows 10 (not visible on Win11) -->
    <Grid x:Name="RootGrid"
          CornerRadius="0"
          BorderThickness="1"
          BorderBrush="{ThemeResource AccentAAFillColorDisabled}"
          Background="{x:Bind ViewModel.SettingsContext.WindowBackgroundBrush, Mode=OneWay}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*"
                              MinWidth="50" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="PinnedWindowState">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.IsWindowPinned, Mode=OneWay}"
                                                      To="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootGrid.Padding"
                                Value="-1" />
                        <Setter Target="RootGrid.BorderThickness"
                                Value="2" />
                        <Setter Target="RootGrid.BorderBrush"
                                Value="{ThemeResource SystemAccentColor}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="RoundedCornerState">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind _window.IsRoundedCornerSupported, Mode=OneTime}"
                                                      To="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootGrid.CornerRadius"
                                Value="7" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="NoneSelectionMode">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind MultiSelectionToggleButton.IsChecked, Mode=OneWay}"
                                                      To="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ClipsListView.SelectionMode"
                                Value="None" />
                        <Setter Target="MultipleSelectionFooter.Visibility"
                                Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MultipleSelectionMode">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind MultiSelectionToggleButton.IsChecked, Mode=OneWay}"
                                                      To="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ClipsListView.SelectionMode"
                                Value="Multiple" />
                        <Setter Target="MultipleSelectionFooter.Visibility"
                                Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:NavigationTabList x:Name="NavigationTabList"
                                    Grid.Column="0"
                                    Grid.Row="0"
                                    Grid.RowSpan="5"
                                    Margin="4,4,0,4"
                                    SelectionMode="Single"
                                    ItemsSource="{x:Bind ViewModel.NavigationTabItems, Mode=OneWay}"
                                    SelectedItem="{x:Bind ViewModel.SelectedTab, Mode=TwoWay}"
                                    ItemContainerStyle="{ThemeResource NavigationTabItemStyle}"
                                    ItemTemplateSelector="{StaticResource NavigationTabTemplateSelector}"
                                    KeyDown="NavigationTabList_KeyDown">
            <controls:NavigationTabList.Resources>
                <Style TargetType="ScrollViewer"
                       BasedOn="{StaticResource NavigationTabListScrollViewerStyle}" />
            </controls:NavigationTabList.Resources>
        </controls:NavigationTabList>

        <Border x:Name="WindowDragArea"
                Grid.Column="1"
                Grid.Row="0"
                Background="Transparent"
                PointerPressed="WindowDragArea_PointerPressed"
                PointerReleased="WindowDragArea_PointerReleased"
                PointerMoved="WindowDragArea_PointerMoved"
                DoubleTapped="WindowDragArea_DoubleTapped"
                ContextFlyout="{StaticResource TitleBarContextMenuFlyout}">
            <TextBlock Margin="8,8,8,8"
                       Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"
                       VerticalAlignment="Center"
                       TextWrapping="NoWrap"
                       Text="{x:Bind ViewModel.SelectedTab.Title, Mode=OneWay}"
                       Style="{ThemeResource SubtitleTextBlockStyle}"/>
        </Border>

        <StackPanel Grid.Column="3"
                    Grid.Row="0"
                    Margin="8,0,12,0"
                    Spacing="4"
                    Orientation="Horizontal"
                    VerticalAlignment="Center">
            <Button x:Uid="TitleButton_More"
                    AutomationProperties.AutomationId="TitleBarButtons"
                    AutomationProperties.Name="More"
                    AccessKey="M"
                    Width="32"
                    Height="32"
                    Content="{tk:FontIcon FontSize=14, Glyph=&#xE712;}"
                    Style="{ThemeResource AlternateButtonStyle}"
                    Flyout="{StaticResource TitleBarContextMenuFlyout}" />

            <Button x:Uid="TitleButton_Close"
                    AutomationProperties.AutomationId="TitleBarButtons"
                    AutomationProperties.Name="Close Window"
                    AccessKey="E"
                    Width="32"
                    Height="32"
                    Command="{x:Bind ViewModel.CloseWindowCommand}"
                    Content="{tk:FontIcon FontSize=14, Glyph=&#xE711;}"
                    Style="{ThemeResource AlternateButtonStyle}" />
        </StackPanel>

        <Grid Grid.Column="1"
              Grid.Row="1"
              Grid.ColumnSpan="2"
              ColumnSpacing="4"
              Margin="4,0,12,8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <AutoSuggestBox x:Name="SearchBox"
                            x:Uid="SearchBox"
                            AutomationProperties.AutomationId="SearchBox"
                            AutomationProperties.Name="Search Clips"
                            Grid.Column="0"
                            TabIndex="2"
                            VerticalAlignment="Center"
                            IsEnabled="{x:Bind ViewModel.IsSearchEnabled, Mode=OneWay}"
                            Text="{x:Bind ViewModel.SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            KeyDown="SearchBox_KeyDown"/>

            <Button x:Name="FilterButton"
                    x:Uid="FilterButton"
                    AutomationProperties.AutomationId="FilterButton"
                    AutomationProperties.Name="Filter Clips"
                    AccessKey="F"
                    Grid.Column="1"
                    TabIndex="3"
                    Width="32"
                    Height="32"
                    Padding="0"
                    VerticalAlignment="Stretch"
                    Content="{tk:FontIcon FontSize=14, Glyph=&#xE71C;}"
                    Flyout="{StaticResource FilterButtonFlyout}" />

            <ToggleButton x:Name="MultiSelectionToggleButton"
                          x:Uid="MultiSelectionToggleButton"
                          AutomationProperties.AutomationId="MultiSelectionButton"
                          AutomationProperties.Name="Enable Multiple Selection"
                          AccessKey="S"
                          Grid.Column="2"
                          TabIndex="4"
                          Width="32"
                          Height="32"
                          Padding="0"
                          VerticalAlignment="Stretch"
                          Content="{tk:FontIcon FontSize=14, Glyph=&#xE762;}" />
        </Grid>

        <Grid x:Name="MonitoringPausedBanner"
              Grid.Column="1"
              Grid.Row="2"
              Grid.ColumnSpan="2"
              Margin="4,0,12,8"
              Padding="8"
              ColumnSpacing="8"
              CornerRadius="{ThemeResource ControlCornerRadius}"
              BorderBrush="{ThemeResource InfoBarBorderBrush}"
              BorderThickness="{ThemeResource InfoBarBorderThickness}"
              Background="{ThemeResource InfoBarWarningSeverityBackgroundBrush}"
              Visibility="{x:Bind ViewModel.IsClipboardMonitoringEnabled, Mode=OneWay, Converter={StaticResource InvertedBoolToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <FontIcon Margin="4,0,0,0"
                      FontSize="16"
                      Glyph="&#xF167;"
                      Foreground="{ThemeResource InfoBarWarningSeverityIconBackground}" />
            <TextBlock x:Uid="Banner_PausedMonitoring"
                       Grid.Column="1"
                       TextWrapping="Wrap" />
        </Grid>

        <ListView x:Name="ClipsListView"
                  AutomationProperties.AutomationId="ClipsList"
                  AutomationProperties.Name="All Clips"
                  Grid.Column="1"
                  Grid.Row="3"
                  Grid.ColumnSpan="2"
                  TabIndex="1"
                  SelectionMode="None"
                  ShowsScrollingPlaceholders="False"
                  IsItemClickEnabled="True"
                  CanDragItems="{x:Bind ViewModel.SettingsContext.IsClipsDragAndDropEnabled, Mode=OneWay}"
                  ItemsSource="{x:Bind ViewModel.ClipsCollection, Mode=OneWay}"
                  ItemContainerStyle="{StaticResource ClipsListViewStyle}"
                  DragItemsStarting="ClipsListView_DragItemsStarting"
                  ContainerContentChanging="ClipsListView_ContainerContentChanging"
                  PreviewKeyDown="ClipsListView_PreviewKeyDown"
                  GettingFocus="ClipsListView_GettingFocus"
                  ItemClick="ClipsListView_ItemClick"
                  SelectionChanged="ClipsListView_SelectionChanged">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:ClipModel"
                              x:DefaultBindMode="OneWay">
                    <Grid x:Name="ClipRootGrid"
                          Padding="12"
                          CornerRadius="{ThemeResource ListViewItemCornerRadius}"
                          Background="{ThemeResource LayerFillColorDefaultBrush}"
                          BorderThickness="{ThemeResource ButtonBorderThemeThickness}"
                          BorderBrush="{ThemeResource ControlStrokeColorDefaultBrush}"
                          ContextRequested="ClipRootGrid_ContextRequested">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ContentControl Grid.Column="0"
                                        Grid.Row="0"
                                        Grid.ColumnSpan="4"
                                        MaxHeight="180"
                                        Margin="0,0,0,8"
                                        IsTabStop="False"
                                        HorizontalContentAlignment="Stretch"
                                        Content="{x:Bind Data, Converter={StaticResource ClipToControlConverter}}" />

                        <ListView x:Name="ClipTagsListView"
                                  x:Load="{x:Bind HasTags}"
                                  Grid.Column="0"
                                  Grid.Row="1"
                                  Grid.ColumnSpan="3"
                                  Margin="0,0,0,8"
                                  SelectionMode="None"
                                  ItemsSource="{x:Bind Tags}"
                                  IsHitTestVisible="False">
                            <ListView.Style>
                                <Style TargetType="ListView">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListView">
                                                <ItemsPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.Style>

                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <tkcontrols:WrapPanel Orientation="Horizontal"
                                                          HorizontalSpacing="4"
                                                          VerticalSpacing="4" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>

                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="IsTabStop"
                                            Value="False" />
                                    <Setter Property="MinWidth"
                                            Value="30" />
                                    <Setter Property="MinHeight"
                                            Value="0" />
                                    <Setter Property="MaxWidth"
                                            Value="120" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>

                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="models:TagModel">
                                    <Grid Padding="8,2,8,4"
                                          CornerRadius="10"
                                          Background="{x:Bind ColorBrush}">
                                        <TextBlock FontSize="12"
                                                   TextTrimming="CharacterEllipsis"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Text="{x:Bind Name}" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <FontIcon x:Name="ClipFavoriteIcon"
                                  x:Load="{x:Bind IsFavorite}"
                                  Grid.Column="0"
                                  Grid.Row="2"
                                  Margin="0,0,8,0"
                                  Glyph="&#xE734;"
                                  FontSize="{StaticResource CaptionTextBlockFontSize}" />

                        <TextBlock Grid.Column="1"
                                   Grid.Row="2"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                   DataContext="{x:Bind Data, Converter={StaticResource DataFooterInfoConverter}}"
                                   Text="{Binding Result}"
                                   Style="{ThemeResource CaptionTextBlockStyle}" />
                        
                        <TextBlock Grid.Column="2"
                                   Grid.Row="2"
                                   Margin="8,0,0,0"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                   Text="{x:Bind ClipTime, Converter={StaticResource DateTimeToHumanReadableConverter}}"
                                   Style="{ThemeResource CaptionTextBlockStyle}" />
                        
                        <Image x:Name="ClipIconBitmap"
                               x:Load="{x:Bind Owner.IconBitmap, Converter={StaticResource EmptyObjectToBoolConverter}}"
                               Grid.Column="3"
                               Grid.Row="2"
                               Height="16"
                               Margin="8,0,0,0"
                               Source="{x:Bind Owner.IconBitmap}" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Grid x:Name="MultipleSelectionFooter"
              Grid.Column="1"
              Grid.Row="4"
              Grid.ColumnSpan="2"
              Height="32">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="SelectedClipsCountTextBlock"
                       Grid.Column="0"
                       Margin="8,0,4,0"
                       Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                       VerticalAlignment="Center"
                       Style="{ThemeResource BodyTextBlockStyle}" />

            <CheckBox x:Name="SelectAllCheckBox"
                      x:Uid="SelectAllCheckBox"
                      Grid.Column="1"
                      MinWidth="20"
                      MinHeight="20"
                      Margin="4,0,16,0"
                      Padding="0"
                      VerticalAlignment="Center"
                      Click="SelectAllCheckBox_Click" />
        </Grid>
    </Grid>
</Page>
